blueprint:
  name: Bézier Dimmer Light Control
  description: Adjusts lights using cubic Bézier curves based on dimmer input
  domain: automation
  input:
    dimmer_event:
      name: Dimmer Event
      description: Select the dimmer event
      selector:
        event:
          platform: zha
    input_min:
      name: Input Min
      description: Minimum input value from the dimmer
      default: 2
      selector:
        number:
          min: 0
          max: 255
          step: 1
          unit_of_measurement: ""
    input_max:
      name: Input Max
      description: Maximum input value from the dimmer
      default: 255
      selector:
        number:
          min: 0
          max: 255
          step: 1
          unit_of_measurement: ""
    output_min:
      name: Output Min
      description: Minimum output brightness percentage
      default: 0
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
    output_max:
      name: Output Max
      description: Maximum output brightness percentage
      default: 100
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
    bezier_curves:
      name: Bézier Curves
      description: Define cubic Bézier curves for each light
      selector:
        object:
          multiple: true
          default:
            - entity_id: light.kitchen_cabinet_bottom
              bezier:
                - 0.7
                - 0.07
                - 0.5
                - 0.85
            - entity_id: light.kitchen_cabinets_top
              bezier:
                - 0.2
                - 0.2
                - 0.1
                - 1
            - entity_id: light.kitchen_globe
              bezier:
                - 1
                - 0.01
                - 0.85
                - 0.46

mode: restart

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input dimmer_event

action:
  - variables:
      input_min: !input input_min
      input_max: !input input_max
      output_min: !input output_min
      output_max: !input output_max
      t: "{{ (trigger.event.data.params.level | float - input_min) / (input_max - input_min) }}"
      bezier_curves: !input bezier_curves

  - repeat:
      for_each: "{{ bezier_curves }}"
      sequence:
        - variables:
            p0: 0
            p3: 1
            p1x: "{{ repeat.item.bezier[0] }}"
            p1y: "{{ repeat.item.bezier[1] }}"
            p2x: "{{ repeat.item.bezier[2] }}"
            p2y: "{{ repeat.item.bezier[3] }}"
            bezier_value: |-
              {{
                ((1 - t) ** 3 * p0) +
                (3 * (1 - t) ** 2 * t * p1y) +
                (3 * (1 - t) * t ** 2 * p2y) +
                (t ** 3 * p3)
              }}
            brightness: "{{ ((bezier_value * (output_max - output_min)) + output_min) | int }}"

        - service: light.turn_on
          target:
            entity_id: "{{ repeat.item.entity_id }}"
          data:
            brightness_pct: "{{ brightness }}"

  - service: logbook.log
    data:
      name: Bézier Dimmer Automation
      message: >-
        Input: {{ trigger.event.data.params.level }},
        Normalized: {{ t }},
        Brightness: {{ brightness }}
