blueprint:
  name: LightEase Dimmer Control
  description: >
    Controls multiple dimmable lights using a single dimmer input.
    Each light follows its own Bézier curve for smooth, customized dimming.
  domain: automation
  input:
    control_device:
      name: Control Dimmer
      description: Select the dimmer input to control the lights.
      selector:
        entity:
          domain: input_number

    lights:
      name: Lights to Control
      description: Select the lights to be controlled.
      selector:
        entity:
          domain: light
          multiple: true

    curves:
      name: Bézier Curves
      description: >
        Define Bézier curves for each light. Format: 
        [[x1, y1, x2, y2], ...] 
      selector:
        object:

mode: restart

trigger:
  - platform: state
    entity_id: !input control_device

variables:
  control_value: "{{ states[trigger.entity_id].state | float }}"
  lights: !input lights
  curves: !input curves

action:
  - repeat:
      count: "{{ lights | length }}"
      sequence:
        - variables:
            light_index: "{{ repeat.index - 1 }}"
            light_entity: "{{ lights[light_index] }}"
            bezier_curve: "{{ curves[light_index] }}"

        # 📝 Log values in Developer Tools > Logbook
        - service: system_log.write
          data:
            level: debug
            message: >-
              Light: {{ light_entity }},
              Bézier Curve: {{ bezier_curve }},
              Control Value: {{ control_value }}

        # 🔆 Calculate brightness based on Bézier curve
        - service: light.turn_on
          target:
            entity_id: "{{ light_entity }}"
          data:
            brightness_pct: >-
              {% set x1, y1, x2, y2 = bezier_curve %}
              {% set t = control_value / 100 %}
              {% set bezier_brightness = ((3*(1-t)*(1-t)*t*y1 + 3*(1-t)*t*t*y2 + t*t*t) * 100) | int %}
              {% if bezier_brightness < 1 %}{% set bezier_brightness = 1 %}{% endif %}
              {{ bezier_brightness }}
